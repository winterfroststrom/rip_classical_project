This directory contains the scripts necessary for reproducing the
experiments for issue7. This is self-contained, so it doesn't matter
where it's placed. It may be useful as a basis for similar
experiments.

The following assumptions are made about the environment:
 * svn checkout svn+ssh://downward/... works
 * qsub to queue "athlon_core.q" works

This should be satisfied, e.g., when running this as helmert@habakuk.


Runnning the experiment
=======================

# ./test-issue7

This checks out a suitable version of trunk and builds the planner. If
test-issue7 is called multiple times, this initial setup step is only
performed the first time.

It then runs the translator and selected configurations of the search
component for the specified revisions of the translator in the
translate-andrew branch. If no revisions are specified, a suitable
default is used (see explanations within the script).

The search components are run with lower priority and also are
requested to wait for preprocessing to complete before starting (via
qsub job dependencies), so all translation results should be there
pretty quickly.

NOTE: The computers where qsub works don't always have a current
version of g++ and svn, so the setup step may run into problems. In
that case, it's possible to do the setup on (e.g.) alfons, and then
the actual experiment on (e.g.) habakuk.

Just run "test-issue7" on alfons first. It will do the setup step and
then abort because it notices that qsub is not available. Then run
"test-issue7" on habakuk. It will notice that the setup step has
already been done and proceed directly to the actual experiment.


Analyzing the results
=====================

# ./time-comparison.py issue7-r*
=> Give statistics on runtime of the translator version

# ./quick-check-sasplus-issue7
=> Give statistics about where the translator introduced conditional
   effects or derived variables.

# ./quick-count-issue7
=> Give coverage statistics for the search component.

# ./quick-count-bydomain-issue7
=> Give coverage statistics for the search component on a domain-by-domain
   basis.
