  ;; movement and clinbing
  (define (operator GO-TO)
      :parameters (?x ?y)
      :precondition (:and (:neq ?y ?x) (on-floor) (at monkey ?y))
      :effect (:and (at monkey ?x) (:not (at monkey ?y))))
  
  (define (operator CLIMB)
      :parameters (?x)
      :precondition (:and (at box ?x) (at monkey ?x))
      :effect (:and (onbox ?x) (:not (on-floor))))
  
  (define (operator PUSH-BOX)
      :parameters (?x ?y)
      :precondition (:and (:neq ?y ?x) (at box ?y) (at monkey ?y) (on-floor))
      :effect (:and (at monkey ?x) (:not (at monkey ?y))  (at box ?x)    (:not (at box ?y))))

  ;; getting bananas
  (define (operator GET-KNIFE)
      :parameters (?y)
      :precondition (:and (at knife ?y) (at monkey ?y))
      :effect (:and (hasknife) (:not (at knife ?y))))

  (define (operator GRAB-BANANAS)
      :parameters (?y)
      :precondition (:and (hasknife) (at bananas ?y) (onbox ?y))
      :effect (:and (hasbananas)))
  
  ;; getting water
  (define (operator PICKGLASS)
      :parameters (?y)
      :precondition (:and (at glass ?y) (at monkey ?y))
      :effect (:and (hasglass) (:not (at glass ?y))))
  
  (define (operator GETWATER)
      :parameters (?y)
      :precondition (:and (hasglass)
			  (at waterfountain ?y)
			  (at monkey ?y)
			  (onbox ?y))
      :effect (:and (haswater)))
      
;;;UCPOP(32): (bf-control 'monkey-test1)
;;;
;;;Initial  : ((LOCATION P1) (LOCATION P2) (LOCATION P3) (LOCATION P4)
;;;            (AT MONKEY P1) (ON-FLOOR) (AT BOX P2) (AT BANANAS P3)
;;;            (AT KNIFE P4))
;;;
;;;Step 1  : (GO-TO P4 P1)          Created 5 
;;;           0  -> (ON-FLOOR)          
;;;           0  -> (AT MONKEY P1)      
;;;Step 2  : (GET-KNIFE P4)         Created 6 
;;;           0  -> (AT KNIFE P4)       
;;;           5  -> (AT MONKEY P4)      
;;;Step 3  : (GO-TO P2 P4)          Created 4 
;;;           0  -> (ON-FLOOR)          
;;;           5  -> (AT MONKEY P4)      
;;;Step 4  : (PUSH-BOX P3 P2)       Created 3 
;;;           0  -> (AT BOX P2)         
;;;           4  -> (AT MONKEY P2)      
;;;           0  -> (ON-FLOOR)          
;;;Step 5  : (CLIMB P3)             Created 2 
;;;           3  -> (AT BOX P3)         
;;;           3  -> (AT MONKEY P3)      
;;;Step 6  : (GRAB-BANANAS P3)      Created 1 
;;;           6  -> (HASKNIFE)          
;;;           0  -> (AT BANANAS P3)     
;;;           2  -> (ONBOX P3)          
;;;
;;;Goal    : (HASBANANAS)
;;;           1  -> (HASBANANAS)        
;;;Complete!
;;;
;;;UCPOP (Init = 9  ; Goals = 1 ) => Win  (6 steps)     CPU 850      
;;;     Nodes (V = 66  ; Q = 26  ; C = 103 )             Branch 1.3939394 
;;;     Working Unifies: 875                             Bindings added: 101  
;;;NIL

(define (problem monkey-test1)
       :init (:and (location p1)(location p2)(location p3)(location p4)
		(at monkey p1)(on-floor)(at box p2)(at bananas p3)
		(at knife p4))
       :goals (:and (hasbananas)))


(define (problem monkey-test2)
       :init (:and (location p1)(location p2)(location p3)
		(location p4)(location p6)
		(at monkey p1)(on-floor)
		(at box p2)
		(at bananas p3)
		(at knife p4)
		(at waterfountain p3)(at glass p6))
       :goals (:and (hasbananas) (haswater)))


(define (problem monkey-test3)
       :init (:and (location p1)(location p2)(location p3)
		(location p4)(location p6)
		(at monkey p1)(on-floor)
		(at box p2)
		(at bananas p3)
		(at knife p4)
		(at waterfountain p5)(at glass p6))
       :goals (:and (hasbananas) (haswater)))
